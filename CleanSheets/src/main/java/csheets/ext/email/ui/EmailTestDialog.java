/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csheets.ext.email.ui;

import csheets.core.Cell;
import csheets.ext.email.Email;
import csheets.ext.email.EmailController;
import csheets.ui.ctrl.SelectionEvent;
import csheets.ui.ctrl.SelectionListener;
import csheets.ui.ctrl.UIController;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.mail.SendFailedException;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author Rui Bastos
 */
public class EmailTestDialog extends javax.swing.JDialog implements SelectionListener {

	private final EmailController controller;
	private final UIController uiController;
	private final Email mail;

	/**
	 * Creates new form EmailTestDialog
	 *
	 * @param parent Parent frame
	 * @param modal Modal
	 * @param controller email controller
	 * @param uiController ui controller
	 * @param mail email account
	 */
	public EmailTestDialog(java.awt.Frame parent, boolean modal,
						   EmailController controller, UIController uiController,
						   Email mail) {
		super(parent, modal);

		initComponents();
		Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
		this.
			setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.
						getSize().height / 2);

		this.controller = controller;
		this.uiController = uiController;
		this.mail = mail;

		uiController.addSelectionListener(this);
		setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);
		addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent e) {
				uiController.removeSelectionListener(EmailTestDialog.this);
				EmailTestDialog.this.setModal(false);
				EmailTestDialog.this.dispose();
			}
		});
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        destinationjLabel = new javax.swing.JLabel();
        destinationCellText = new javax.swing.JTextField();
        changeDestinationButton = new javax.swing.JToggleButton();
        subjectjLabel = new javax.swing.JLabel();
        subjectCellText = new javax.swing.JTextField();
        changeSubjectButton = new javax.swing.JToggleButton();
        bodyjLabel = new javax.swing.JLabel();
        changeBodyButton = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bodyCellText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Email Test", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        destinationjLabel.setText("Destination:");

        destinationCellText.setEditable(false);

        changeDestinationButton.setText("change");
        changeDestinationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeDestinationButtonActionPerformed(evt);
            }
        });

        subjectjLabel.setText("Subject");

        subjectCellText.setEditable(false);

        changeSubjectButton.setText("change");
        changeSubjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSubjectButtonActionPerformed(evt);
            }
        });

        bodyjLabel.setText("Body");

        changeBodyButton.setText("change");
        changeBodyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeBodyButtonActionPerformed(evt);
            }
        });

        jButton1.setForeground(new java.awt.Color(51, 153, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/csheets/ext/email/res/img/paperfly-512.png"))); // NOI18N
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        bodyCellText.setEditable(false);
        bodyCellText.setColumns(20);
        bodyCellText.setRows(5);
        jScrollPane1.setViewportView(bodyCellText);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(destinationjLabel)
                            .addComponent(subjectjLabel)
                            .addComponent(bodyjLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(destinationCellText)
                            .addComponent(subjectCellText)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(changeDestinationButton)
                            .addComponent(changeSubjectButton)
                            .addComponent(changeBodyButton))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinationjLabel)
                    .addComponent(destinationCellText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeDestinationButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subjectjLabel)
                    .addComponent(subjectCellText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeSubjectButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(changeBodyButton)
                    .addComponent(bodyjLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void changeDestinationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeDestinationButtonActionPerformed
		this.setVisible(false);
    }//GEN-LAST:event_changeDestinationButtonActionPerformed

    private void changeSubjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSubjectButtonActionPerformed
		this.setVisible(false);
    }//GEN-LAST:event_changeSubjectButtonActionPerformed

    private void changeBodyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeBodyButtonActionPerformed
		this.setVisible(false);
    }//GEN-LAST:event_changeBodyButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

		SendingEmailPanel sendingEmailPanel = new SendingEmailPanel();
		sendingEmailPanel.setVisible(true);
		try {

			this.controller.sendEmail(this.mail, this.destinationCellText.
									  getText(), this.subjectCellText.getText(), this.bodyCellText.
									  getText());
			sendingEmailPanel.setVisible(false);
			JOptionPane.
				showMessageDialog(this, "Message sent successfully!!!", "Success", JOptionPane.INFORMATION_MESSAGE);

		} catch (SendFailedException ex) {
			sendingEmailPanel.setVisible(false);
			JOptionPane.
				showMessageDialog(this, "Invalid Address!!!", "Error", JOptionPane.ERROR_MESSAGE);
		} catch (Exception ex) {
			sendingEmailPanel.setVisible(false);
			JOptionPane.
				showMessageDialog(this, "There's been an error!!!", "Error", JOptionPane.ERROR_MESSAGE);
		}

		uiController.removeSelectionListener(EmailTestDialog.this);
		dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.
				getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(EmailTestDialog.class.getName()).
				log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(EmailTestDialog.class.getName()).
				log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(EmailTestDialog.class.getName()).
				log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(EmailTestDialog.class.getName()).
				log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				EmailTestDialog dialog = new EmailTestDialog(new javax.swing.JFrame(), true, null, null, null);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					@Override
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea bodyCellText;
    private javax.swing.JLabel bodyjLabel;
    private javax.swing.JToggleButton changeBodyButton;
    private javax.swing.JToggleButton changeDestinationButton;
    private javax.swing.JToggleButton changeSubjectButton;
    private javax.swing.JTextField destinationCellText;
    private javax.swing.JLabel destinationjLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField subjectCellText;
    private javax.swing.JLabel subjectjLabel;
    // End of variables declaration//GEN-END:variables

	@Override
	public void selectionChanged(SelectionEvent event) {
		Cell cell = event.getCell();
		if (event.isCellChanged()) {
			this.setVisible(true);
			if (this.changeDestinationButton.isSelected()) {
				this.changeDestinationButton.setSelected(false);
				this.destinationCellText.setText(cell.getContent());
			} else if (this.changeSubjectButton.isSelected()) {
				this.changeSubjectButton.setSelected(false);
				this.subjectCellText.setText(cell.getContent());
			} else if (this.changeBodyButton.isSelected()) {
				this.changeBodyButton.setSelected(false);
				this.bodyCellText.setText(cell.getContent());
			}
		}
	}
}
