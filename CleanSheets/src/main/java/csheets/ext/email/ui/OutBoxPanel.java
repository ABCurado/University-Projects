/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csheets.ext.email.ui;

import csheets.ext.email.EmailExtension;
import csheets.notification.Notification;
import java.awt.GridLayout;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JPanel;

/**
 *
 * @author Jo√£o Martins
 */
public class OutBoxPanel extends javax.swing.JPanel implements Observer {

	/**
	 * Creates new form OutBoxPanel
	 */
	public OutBoxPanel() {
		this.setName(EmailExtension.NAME);
		initComponents();
		defaultGridRow();
		Notification.emailInformer().addObserver(this);
	}

	/**
	 * Add new Line
	 *
	 * @param panel
	 */
	private void addPanel(JPanel panel) {
		this.mainPanel.add(panel);
		addGridRow();
	}

	/**
	 * Layout specific: set's the default number of rows (5).
	 */
	private void defaultGridRow() {
		((GridLayout) this.mainPanel.getLayout()).setRows(5);
	}

	/**
	 * Layout specific: add's a row to the panel's layout (to prevent adding a
	 * new column).
	 */
	private void addGridRow() {
		GridLayout layout = (GridLayout) this.mainPanel.getLayout();
		layout.setRows(layout.getRows() + 1);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelOutBoxTitle = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();

        labelOutBoxTitle.setText("OutBox");

        mainPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        mainPanel.setLayout(new java.awt.GridLayout(1, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(labelOutBoxTitle)
                .addGap(0, 348, Short.MAX_VALUE))
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(labelOutBoxTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labelOutBoxTitle;
    private javax.swing.JPanel mainPanel;
    // End of variables declaration//GEN-END:variables

	/**
	 * Refresh the panels.
	 */
	private void refreshUI() {
		this.mainPanel.revalidate();
		this.mainPanel.repaint();
	}

	/**
	 * Update the list of emails if is there a new email (panel) to add to the
	 * main panel.
	 *
	 * @param o
	 * @param arg
	 */
	@Override
	public void update(Observable o, Object arg) {
		if (arg instanceof JPanel) {
			addPanel((JPanel) arg);
			refreshUI();
		}
	}
}
