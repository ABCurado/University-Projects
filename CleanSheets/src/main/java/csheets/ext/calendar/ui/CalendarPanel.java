package csheets.ext.calendar.ui;

import csheets.domain.ContactCalendar;
import csheets.ext.calendar.CalendarController;
import csheets.ext.events.EventsExtension;
import csheets.notification.Notification;
import csheets.ui.ctrl.UIController;
import java.awt.GridLayout;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JOptionPane;

/**
 *
 * @author Martins
 */
public class CalendarPanel extends javax.swing.JPanel implements Observer {

	private CalendarController controller;

	/**
	 * Creates new form EventsPanel
	 *
	 * @param uiController The user interface controller.
	 */
	public CalendarPanel(UIController uiController) {
		this.setName(EventsExtension.NAME);
		this.initComponents();
		this.controller = new CalendarController(uiController, this);
		Notification.calendarInformer().addObserver(this);
		Notification.contactInformer().addObserver(this);
		this.update(null, null);
	}

	@Override
	public void update(Observable o, Object arg) {
		clearCalendarList();
		for (ContactCalendar calendar : this.controller.allCalendars()) {
			CalendarPanelSingle panel = new CalendarPanelSingle(this.controller, calendar);
			this.addCalendarPanel(panel);
		}
		this.jPanelCalendars.revalidate();
		this.jPanelCalendars.repaint();
	}

	private void addCalendarPanel(CalendarPanelSingle panel) {
		this.jPanelCalendars.add(panel);
		addGridRow();
	}

	/*
    * Deletes all information from event list.
	 */
	private void clearCalendarList() {
		this.jPanelCalendars.removeAll();
		defaultGridRow();
	}

	/*
    * Layout specific: set's the default number of rows (5)
	 */
	private void defaultGridRow() {
		((GridLayout) this.jPanelCalendars.getLayout()).setRows(5);
	}

	/*
    * Layout specific: add's a row to the panel's layout (to prevent adding a new colummn).
	 */
	private void addGridRow() {
		GridLayout layout = (GridLayout) this.jPanelCalendars.getLayout();
		layout.setRows(layout.getRows() + 1);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonAddCalendar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanelCalendars = new javax.swing.JPanel();

        jPanel1.setLayout(new java.awt.BorderLayout());

        jButtonAddCalendar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/csheets/res/img/add_event.png"))); // NOI18N
        jButtonAddCalendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddCalendarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonAddCalendar, java.awt.BorderLayout.EAST);

        jPanelCalendars.setLayout(new java.awt.GridLayout(5, 1));
        jScrollPane1.setViewportView(jPanelCalendars);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddCalendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddCalendarActionPerformed
		ManageCalendar calendar = new ManageCalendar(this.controller, null);
		int eventOption = JOptionPane.
			showConfirmDialog(null, calendar, "Create Calendar", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
		if (eventOption == JOptionPane.OK_OPTION) {
			calendar.createCalendar();
		}
    }//GEN-LAST:event_jButtonAddCalendarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddCalendar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelCalendars;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
