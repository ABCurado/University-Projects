/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csheets.ext.contacts.ui;

import csheets.domain.Contact;
import csheets.domain.ContactCalendar;
import csheets.domain.Event;
import csheets.domain.PersonContact;
import csheets.ext.contacts.ContactsController;
import csheets.notification.Notification;
import java.awt.Image;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.tree.DefaultMutableTreeNode;

/**
 *
 * @author Martins
 */
public class PersonView extends javax.swing.JFrame implements Observer {

	private ContactsController controller;
	private Contact contact;
	DefaultMutableTreeNode root;
	private final DefaultListModel tagsModel = new DefaultListModel();

	/**
	 * Creates new form PersonView
	 *
	 * @param controller controller
	 * @param contact contact
	 */
	public PersonView(ContactsController controller, Contact contact) {
		this.controller = controller;
		this.contact = contact;
		initComponents();
		this.jList1.setModel(this.tagsModel);
		this.setLocationRelativeTo(null);
		this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
		this.setVisible(true);

		PersonContact personCont = (PersonContact) this.contact;
		DefaultMutableTreeNode treeRoot = (DefaultMutableTreeNode) this.jTreePerson.
			getModel().getRoot();
		this.root = new DefaultMutableTreeNode(personCont.name());
		treeRoot.add(root);

		this.update(null, null);
		Notification.calendarInformer().addObserver(this);
		Notification.contactInformer().addObserver(this);
		Notification.eventInformer().addObserver(this);
	}

	@Override
	public void update(Observable o, Object arg) {
		try {
			this.jLabelPersonPhoto.setIcon(new ImageIcon(this.controller.
				contactPhoto(contact).
				getScaledInstance(this.jLabelPersonPhoto.
					getWidth(), this.jLabelPersonPhoto.getHeight(), Image.SCALE_SMOOTH)));
			this.jLabelPersonName.setText(this.contact.name());
			if (contact instanceof PersonContact) {
				PersonContact person = (PersonContact) contact;
				if (!person.profession().isEmpty()) {
					this.jLabelProfission.setText("Profission: " + person.
						profession());
				}
				if (person.company() != null) {
					this.jLabelCompany.setText("Company: " + person.company().
						name());
				}
			}

			this.jTreePerson.removeAll();
			for (ContactCalendar calendarPer : this.controller.
				calendarContact(contact)) {
				DefaultMutableTreeNode contactRoot = new DefaultMutableTreeNode(calendarPer.
					getName());
				root.add(contactRoot);
				for (Event event : this.controller.
					eventsCalendar(calendarPer)) {
					DefaultMutableTreeNode eventRoot = new DefaultMutableTreeNode(event);
					contactRoot.add(eventRoot);
				}
			}
			this.jTreePerson.revalidate();
			this.jTreePerson.repaint();
		} catch (Exception ex) {
			Logger.getLogger(CompanyView.class.getName()).
				log(Level.SEVERE, null, ex);

		}
		this.tagsModel.removeAllElements();
		for (String tag : this.contact.tags()) {
			this.tagsModel.addElement(tag);
		}
		this.revalidate();
		this.repaint();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTreePerson = new javax.swing.JTree();
        jLabelPerson = new javax.swing.JLabel();
        jLabelPersonPhoto = new javax.swing.JLabel();
        jLabelPersonName = new javax.swing.JLabel();
        jLabelProfission = new javax.swing.JLabel();
        jLabelCompany = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        jTreePerson.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane1.setViewportView(jTreePerson);

        jLabelPerson.setText("Person:");

        jLabelPersonPhoto.setBackground(new java.awt.Color(0, 0, 0));

        jLabelPersonName.setText("Person Name");

        jLabelProfission.setText(" ");

        jLabelCompany.setText(" ");

        jLabel1.setText("Tags:");

        jScrollPane2.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelPersonPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabelPersonName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelCompany, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelProfission, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPersonPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelPersonName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelProfission)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelCompany)))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelPerson)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelCompany;
    private javax.swing.JLabel jLabelPerson;
    private javax.swing.JLabel jLabelPersonName;
    private javax.swing.JLabel jLabelPersonPhoto;
    private javax.swing.JLabel jLabelProfission;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTree jTreePerson;
    // End of variables declaration//GEN-END:variables

}
