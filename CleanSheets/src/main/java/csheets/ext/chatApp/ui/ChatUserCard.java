/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csheets.ext.chatApp.ui;

import csheets.domain.ChatUser;
import csheets.support.CirclePanel;
import csheets.support.Converter;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Image;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;

/**
 *
 * @author nervousdev
 */
public class ChatUserCard extends javax.swing.JPanel {

	private static final Color ONLINE_COLOR = Color.GREEN;
	private static final Color OFFLINE_COLOR = Color.RED;

	private ChatUser theUser;
	private Component parent;

	/**
	 * Creates new form ChatUserCard
	 *
	 * @param user Chat User
	 * @param parent Parent Component
	 */
	public ChatUserCard(ChatUser user, Component parent) {
		this.parent = parent;
		this.theUser = user;
		initComponents();
		this.nicknameLabel.setText(user.nickname());
		try {
			this.photoLabel.setIcon(scaledImageIcon(Converter.getImage(user.
				icon())));
		} catch (IOException ex) {
			Logger.getLogger(ChatUserCard.class.getName()).
				log(Level.SEVERE, null, ex);
		}

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        statusPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        photoLabel = new javax.swing.JLabel();
        nicknameLabel = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        statusPanel.setMaximumSize(new java.awt.Dimension(35, 35));
        statusPanel.setMinimumSize(new java.awt.Dimension(35, 35));
        statusPanel.setPreferredSize(new java.awt.Dimension(35, 35));
        statusPanel.setRequestFocusEnabled(false);
        statusPanel.setLayout(new java.awt.BorderLayout());

        jPanel2.setMaximumSize(new java.awt.Dimension(40, 40));
        jPanel2.setMinimumSize(new java.awt.Dimension(40, 40));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(photoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(photoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nicknameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(statusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 8, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(nicknameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
		// TODO add your handling code here:
		setBorder(BorderFactory.createEtchedBorder());
		repaint();
		((ChatUI) parent).updateSelectedPanel(this);
    }//GEN-LAST:event_formMouseClicked

	@Override
	public boolean equals(Object object) {
		return this.theUser.equals(((ChatUserCard) object).theUser);
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel nicknameLabel;
    private javax.swing.JLabel photoLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

	private ImageIcon scaledImageIcon(Image theImage) {
		return new ImageIcon(theImage.getScaledInstance(40, 40,
														Image.SCALE_SMOOTH));
	}

	private void generateStateUI(boolean state) {
		this.statusPanel.removeAll();
		this.statusPanel.add(CirclePanel.
			createCircle(new Dimension(30, 30), state ? ONLINE_COLOR : OFFLINE_COLOR));
		this.statusPanel.revalidate();
		this.statusPanel.repaint();
	}

	public void changeState(boolean state) {
		if (theUser.state() != state) {
			generateStateUI(state);
			theUser.changeState(state);
		}
	}

	public boolean state() {
		return theUser.state();
	}

	public String nickname() {
		return this.theUser.nickname();
	}
}
