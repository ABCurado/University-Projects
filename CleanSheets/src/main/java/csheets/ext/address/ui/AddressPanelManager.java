/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csheets.ext.address.ui;

import csheets.domain.Address;
import csheets.domain.Contact;
import csheets.ext.address.AddressController;
import csheets.support.PostalCodeValidator;
import java.io.IOException;
import java.util.Observable;
import java.util.Observer;

/**
 *
 * @author Jo√£o Martins
 */
public class AddressPanelManager extends javax.swing.JPanel implements Observer {

	private Contact contact;
	private Address address;
	private AddressController controller;

	/**
	 * Creates new form TaskPanelSing
	 *
	 * @param controller
	 * @param contact
	 * @param address
	 */
	public AddressPanelManager(AddressController controller, Contact contact,
							   Address address) {
		this.controller = controller;
		this.contact = contact;
		this.address = address;
		initComponents();
		this.update(null, address);
	}

	public boolean validatePostalCode() {
		String postalCode = this.jTextFieldPostalCode.getText();
		if (this.jTextFieldCountry.getText().equalsIgnoreCase("Portugal")) {
			return PostalCodeValidator.validatePostalCode(postalCode);
		}
		return true;
	}

	public void createAddress() throws IOException {
		if (!jCheckBoxMain.isSelected() && !jCheckBoxSecundary.isSelected()) {
			throw new IllegalArgumentException("Illegal arguments!");
		}
		if (validatePostalCode()) {
			if (this.address == null) {
				this.controller.
					createAddress(this.contact, this.jTextFieldCountry.
								  getText(), this.jTextFieldCity.getText(), this.jTextFieldStreet.
								  getText(), this.jTextFieldPostalCode.getText(), this.jCheckBoxMain.
								  isSelected());
			} else {
				this.controller.
					editAddress(this.contact, this.address, this.jTextFieldCountry.
								getText(), this.jTextFieldCity.getText(), this.jTextFieldStreet.
								getText(), this.jTextFieldPostalCode.getText(), this.jCheckBoxMain.
								isSelected());
			}
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldCity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldStreet = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldPostalCode = new javax.swing.JTextField();
        jTextFieldCountry = new javax.swing.JTextField();
        jCheckBoxMain = new javax.swing.JCheckBox();
        jCheckBoxSecundary = new javax.swing.JCheckBox();

        setToolTipText("");

        jLabel2.setText("Country:");

        jLabel3.setText("City:");

        jTextFieldCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCityActionPerformed(evt);
            }
        });

        jLabel4.setText("Street:");

        jLabel5.setText("Postal Code:");

        jCheckBoxMain.setText("main");
        jCheckBoxMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMainActionPerformed(evt);
            }
        });

        jCheckBoxSecundary.setText("secundary");
        jCheckBoxSecundary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSecundaryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldPostalCode, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldCity)
                            .addComponent(jTextFieldCountry)
                            .addComponent(jTextFieldStreet))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jCheckBoxMain)
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxSecundary)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldCity, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldPostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxMain)
                    .addComponent(jCheckBoxSecundary))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCityActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCityActionPerformed

    private void jCheckBoxMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMainActionPerformed
		this.jCheckBoxSecundary.setSelected(false);
    }//GEN-LAST:event_jCheckBoxMainActionPerformed

    private void jCheckBoxSecundaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSecundaryActionPerformed
		this.jCheckBoxMain.setSelected(false);
    }//GEN-LAST:event_jCheckBoxSecundaryActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBoxMain;
    private javax.swing.JCheckBox jCheckBoxSecundary;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextFieldCity;
    private javax.swing.JTextField jTextFieldCountry;
    private javax.swing.JTextField jTextFieldPostalCode;
    private javax.swing.JTextField jTextFieldStreet;
    // End of variables declaration//GEN-END:variables

	@Override
	public void update(Observable o, Object o1) {
		if (this.address != null) {
			this.jTextFieldCountry.setText(this.address.getCountry());
			this.jTextFieldCity.setText(this.address.getCity());
			this.jTextFieldStreet.setText(this.address.getStreet());
			this.jTextFieldPostalCode.setText(this.address.getPostalCode());
			if (this.contact.getMainAddress() != null) {
				if (this.contact.getMainAddress().equals(this.address)) {
					this.jCheckBoxMain.setSelected(true);
				} else {
					this.jCheckBoxMain.setEnabled(false);
				}
			}
			if (this.contact.getSecundaryAddress() != null) {
				if (this.contact.getSecundaryAddress().equals(this.address)) {
					this.jCheckBoxSecundary.setSelected(true);
				} else {
					this.jCheckBoxSecundary.setEnabled(false);
				}
			}
		} else {
			if (this.contact.getMainAddress() != null) {
				this.jCheckBoxMain.setEnabled(false);
			}
			if (this.contact.getSecundaryAddress() != null) {
				this.jCheckBoxSecundary.setEnabled(false);
			}
		}
	}
}
