package csheets.ext.task.ui;

import csheets.domain.Task;
import csheets.ext.task.TaskController;
import csheets.ext.task.TaskExtension;
import csheets.framework.persistence.repositories.DataIntegrityViolationException;
import csheets.notification.Notification;
import csheets.ui.ctrl.UIController;
import java.awt.GridLayout;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Martins
 */
public class TaskFrame extends javax.swing.JPanel implements Observer {

	private final TaskController controller;

	/**
	 * Creates new form EventsPanel
	 *
	 * @param uiController The user interface controller.
	 */
	public TaskFrame(UIController uiController) {
		this.setName(TaskExtension.NAME);
		this.controller = new TaskController(uiController);
		this.initComponents();
		Notification.taskInformer().addObserver(this);
		Notification.contactInformer().addObserver(this);
		this.update(null, null);
	}

	@Override
	public void update(Observable o, Object arg) {
		clearTaskList();
		for (Task task : this.controller.
			allTasks(this.jTextFieldLeft.getText(), this.jTextFieldRight.
					 getText())) {
			TaskPanelSingle panel = new TaskPanelSingle(this.controller, task);
			this.addTaskPanel(panel);
		}
		this.jPanelTask.revalidate();
		this.jPanelTask.repaint();
	}

	private void addTaskPanel(TaskPanelSingle panel) {
		this.jPanelTask.add(panel);
		addGridRow();
	}

	/*
    * Deletes all information from event list.
	 */
	private void clearTaskList() {
		this.jPanelTask.removeAll();
		defaultGridRow();
	}

	/*
    * Layout specific: set's the default number of rows (5)
	 */
	private void defaultGridRow() {
		((GridLayout) this.jPanelTask.getLayout()).setRows(5);
	}

	/*
    * Layout specific: add's a row to the panel's layout (to prevent adding a new colummn).
	 */
	private void addGridRow() {
		GridLayout layout = (GridLayout) this.jPanelTask.getLayout();
		layout.setRows(layout.getRows() + 1);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanelTask = new javax.swing.JPanel();
        jButtonAddTask = new javax.swing.JButton();
        jTextFieldLeft = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldRight = new javax.swing.JTextField();

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanelTask.setLayout(new java.awt.GridLayout(5, 1));
        jScrollPane1.setViewportView(jPanelTask);

        jButtonAddTask.setIcon(new javax.swing.ImageIcon(getClass().getResource("/csheets/res/img/add_event.png"))); // NOI18N
        jButtonAddTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddTaskActionPerformed(evt);
            }
        });

        jTextFieldLeft.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldLeftKeyReleased(evt);
            }
        });

        jLabel2.setText("<= percent <=");

        jTextFieldRight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldRightKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldRight, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonAddTask)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAddTask)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)
                                .addComponent(jTextFieldRight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddTaskActionPerformed
		TaskManager manager = new TaskManager(this.controller, null);
		int eventOption = JOptionPane.
			showConfirmDialog(null, manager, "Create/Edit Task", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
		if (eventOption == JOptionPane.OK_OPTION) {
			try {
				manager.createTask();
			} catch (DataIntegrityViolationException ex) {
				Logger.getLogger(TaskFrame.class.getName()).
					log(Level.SEVERE, null, ex);
			}
		}
    }//GEN-LAST:event_jButtonAddTaskActionPerformed

    private void jTextFieldLeftKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldLeftKeyReleased
		this.update(null, null);
    }//GEN-LAST:event_jTextFieldLeftKeyReleased

    private void jTextFieldRightKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldRightKeyReleased
		this.update(null, null);
    }//GEN-LAST:event_jTextFieldRightKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddTask;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelTask;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldLeft;
    private javax.swing.JTextField jTextFieldRight;
    // End of variables declaration//GEN-END:variables
}
