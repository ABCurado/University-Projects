@startuml doc-files/ipc01_01_design1.png

participant "UIController" as UIController
participant "SpreadsheetTable" as SpreadsheetTable
participant "<interface>\nCell" as Cell
participant "ShareCellUI" as ShareCellUI
participant "ShareCellController" as ShareCellController
participant "Volt.UdpClient" as UdpClient
participant "Volt.UdpServer" as UdpServer

UIController->ShareCellUI: activates "Receive Cells" option
ShareCellUI->ShareCellController: new ()

activate ShareCellController
ShareCellController->UdpClient: new ()
ShareCellController->UdpServer: new ()
deactivate ShareCellController

ShareCellUI->ShareCellController: Cell[][] cells = receiveCells()

activate ShareCellController
ShareCellController->UdpClient: expect (":broadcast")
ShareCellController->UdpServer: send (":ip|:port")

ShareCellController->UdpServer: expect (":address|:value")
deactivate ShareCellController

ShareCellUI->ShareCellUI: checkCells()
note right of ShareCellUI: checks if the received cells\nare located on an address that\nalready has existing cells

alt if there are already existing cells
    ShareCellUI->ShareCellUI: Do you wish to replace the current cells\n   with the received ones?
    ShareCellUI->ShareCellUI: Yes
end
	
ShareCellController->UIController: setCells(cells)
ShareCellController->UIController: Cells changed successfully

@enduml
@enduml
